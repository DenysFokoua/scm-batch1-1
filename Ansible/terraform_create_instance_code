provider "aws" {
    region = "ap-southeast-1"
    access_key = "AKIAT2D3YBEFNFVUTFOF"
    secret_key = "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"  
}
#create VPC

resource "aws_vpc" "denysvpc1" {
    cidr_block = "10.0.0.0/16"
    instance_tenancy = "default"
    tags = {
      "name" = "denysvpc1"
    }
  
}

#create subnet

resource "aws_subnet" "mysubnet1" {
    vpc_id = aws_vpc.denysvpc1.id
    cidr_block = "10.0.0.0/24"
    tags = {
      "Name" = "mysubnet1"
    }
  
}
#internet gaeway

resource "aws_internet_gateway" "mygw1" {
    vpc_id = "aws_vpc.denysvpc1"
    tags = {
      "Name" = "mygw1"
    }
  
}

#Route table

resource "aws_route_table" "myrt1" {
    vpc_id = "aws_vpc.denysvpc1"

    route {
      cidr_block = "0.0.0.0/0"
      gateway_id = aws_internet_gateway.mygw1.id
      }
      tags = {
        "Name" = "myrt1"
      }
  
}

#Route table association

resource "aws_route_table_association" "myrta1" {
    subnet_id = "aws_subnet.mysubnet1.id"
    route_table_id = "aws_route_table.myrt1"
  
}
# security group

resource "aws_security_group" "mysg1" {
    name = "mysg1"
    description = "Allow inbound traffic"
    vpc_id = aws_vpc.denysvpc1.id

    ingress {
      cidr_blocks = [ "0.0.0.0/0" ]
      description = "HTTP"
      from_port = 80
      protocol = "tcp"
      to_port = 80
    }

    ingress {
      cidr_blocks = ["0.0.0.0/0" ]
      description = "SSH"
      from_port = 22
      protocol = "tcp"
      to_port = 22
    }

    egress {
      cidr_blocks = ["0.0.0.0/0" ]
      from_port = 0
      ipv6_cidr_blocks = [ "::/0" ]
      protocol = "-1"
      to_port = 0
    }

    tags = {
      "Name" = "mysg1"
    }
}

#create instance

resource "aws_instance" "denysvpc1" {
    ami = "ami-094bbd9e922dc515d"
    instance_type = "t2.micro"
    associate_public_ip_address = true
    subnet_id = aws_subnet.mysubnet1.id
    vpc_security_group_ids = [aws_security_group.mysg1.id]
    key_name = "kubeserverkey"

tags = {
  "Name" = "denysvpc1"
}
}
